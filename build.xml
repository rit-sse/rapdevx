<project name="RapDevX" default="test" basedir=".">
    <!-- Build options definition -->
    <property name="debug" value="true" />
    <property name="verbose" value="no" />
    
    <!-- directory definitions -->
    <property name="src" location="src"/>
    <property name="build" location="bin"/>
    <property name="build.classes" value="${build}/classes" />
    <property name="test.build" location="bin-test" />
    <property name="test.build.classes" value="${test.build}/classes" />
    <property name="test.reports" value="reports" />
    <property name="test.reports.junit" value="reports/junit" />
    <property name="test.reports.pmd" value="reports/pmd" />
    <property name="test.src" location="test" />
    <property name="lib" value="lib" />
    <property name="javadoc" value="doc" />
    <property name="instruments" value="instruments" />
    
    <!-- Special Task homes -->
    <property name="findbugs.home" location="tools/findbugs"/>
    <property name="findbugs.lib" location="${findbugs.home}/lib" />
    <property name="pmd.home" location="tools/pmd/lib" />
    <property name="cobertura.lib" location="tools/cobertura" />
    
    <!-- Project properties -->
    <property name="name" value="RapDev X" />
    
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar" />
            <exclude name="**/*javadoc.jar" />
            <exclude name="**/*sources.jar" />
        </fileset>
    </path>
    
    <path id="test.classpath">
        <fileset>
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="${build.classes}" />
    </path>
    
    <path id="pmd.classpath">
        <pathelement location="${build}"/>
        <fileset dir="${pmd.home}">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    <path id="cobertura.classpath">
        <fileset dir="${cobertura.lib}">
            <include name="cobertura.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
    
    <!--
*******************************************************************************
* Target Definitions                                                          *
*******************************************************************************    
    -->
    <target name="clean" 
        description="Remove build products">
        <delete dir="${build}" />
        <delete dir="${test.reports}" />
        <delete dir="${test.build}" />
        <delete dir="${instruments}" />
        <mkdir dir="${build}" />
        <mkdir dir="${test.reports}" />
        <mkdir dir="${test.build}" />
        <mkdir dir="${instruments}" />
    </target>
    
    <target name="init" 
        description="Create necessary build directories">
        <mkdir dir="${build}" />
    </target>
    
    <target name="build" depends="init" 
        description="compile the source " >
        <mkdir dir="${build.classes}" />
        
        <javac srcdir="${src}" destdir="${build.classes}" 
            verbose="${verbose}" debug="${debug}" includeAntRuntime="false" >
            <classpath refid="classpath" />
        </javac>
    </target>
    
    <target name="build-test" depends="build" 
        description="Build unit tests to run">
        <mkdir dir="${test.build.classes}" />
        
        <javac srcdir="${test.src}" destdir="${test.build.classes}" 
            verbose="${verbose}" debug="${debug}" includeAntRuntime="false" >
            <classpath refid="test.classpath" />
        </javac>
    </target>
    
    <target name="test" depends="build-test" 
        description="Run unit test suite">
        <mkdir dir="${test.reports}" />
        <junit fork="yes" haltonfailure="no">
            <batchtest todir="${test.reports}">
                <fileset dir="${test.src}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
            <formatter type="xml" />
            <classpath>
                <fileset dir="${lib}" includes="**/*.jar" />
                <pathelement path="${test.build.classes}" />
                <pathelement path="${build.classes}" />
            </classpath>
        </junit>
        <mkdir dir="${test.reports.junit}" />
        <junitreport todir="${test.reports.junit}">
            <fileset dir="${test.reports}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test.reports}"/>
        </junitreport>
    </target>
    
    <target name="javadoc" description="Create Documentation">
        <delete dir="${javadoc}" />
        <mkdir dir="${javadoc}" />
         <javadoc
                access="package"
                bottom="${copyright}"
                doctitle="${name} API"
                windowtitle="${name} Internal API Documentation"
                author="true"
                destdir="${javadoc}"
                nodeprecated="false"
                nodeprecatedlist="false"
                noindex="false"
                nonavbar="false"
                notree="false"
                sourcepath="${src}"
                splitindex="true"
                use="true"
                version="true"
                packagenames="*"
                linksource="true">
            <classpath refid="classpath" />
        </javadoc>
    </target>
    
    <!-- WARNING: this requires a jar to be placed in the ant lib directory.  Damn Java! -->
    <target name="findbugs" depends="build" description="Run findbugs" >
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" >
            <classpath>
                <fileset dir="${findbugs.lib}"
                    includes="**/*.jar"/>
              </classpath>
        </taskdef>
        
        <findbugs home="${findbugs.home}"
                  output="xml"
                  outputFile="${test.reports}/findbugs.xml" >
            <sourcePath path="${src}" />
            <class location="${build.classes}" />
        </findbugs>
    </target>
    
    <target name="pmd" >
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath"/>
        <mkdir dir="${test.reports.pmd}" />
        <pmd shortFilenames="true">
            <ruleset>basic</ruleset>
            <formatter type="html" toFile="${test.reports.pmd}/pmd_report.html" />
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
    
    <target name="instrument">
        <cobertura-instrument todir="${instruments}">
            <fileset dir="${build.classes}">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
    </target>
    
    <target name="coverage-test" depends="instrument">
        <mkdir dir="${test.reports}" />
        <junit fork="yes" haltonfailure="no">
            <batchtest todir="${test.reports}">
                <fileset dir="${test.src}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
            <formatter type="xml" />
            <classpath>
                <fileset dir="${lib}" includes="**/*.jar" />
                <pathelement path="${test.build.classes}" />
                <pathelement path="${build.classes}" />
            </classpath>
        </junit>
        <junit failureproperty="test.failure" 
            fork="yes" haltonerror="no">
            <!-- Normally you can create this task by copying your existing JUnit
            target, changing its name, and adding these next two lines.
            You may need to change the locations to point to wherever 
            you've put the cobertura.jar file and the instrumented classes. -->
            <classpath location="${cobertura.lib}/cobertura.jar"/>

            <classpath location="${instruments}"/>
            <batchtest todir="${test.reports}">
                <fileset dir="${test.src}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
            <formatter type="xml" />
            <classpath>
                <fileset dir="${lib}" includes="**/*.jar" />
                <pathelement path="${test.build.classes}" />
                <pathelement path="${build.classes}" />
            </classpath>
        </junit>
    </target>
    
    <target name="coverage" depends="coverage-test">
     <cobertura-report srcdir="${src}" destdir="${test.reports}"/>
    </target>
    
    <target name="hourly" depends="build, test, findbugs, pmd, coverage, javadoc" />
    
    <target name="commit" depends="build, test, pmd" />
    
</project>
